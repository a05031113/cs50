server {
	listen 80;

	# For SSL
	# listen 443 ssl;

	# ssl_certificate /etc/nginx/certs/debian/final.crt;
	# ssl_certificate_key /etc/nginx/certs/debian/debian.key;
	# ssl_client_certificate /etc/nginx/certs/debian/client-ca.crt;
	# ssl_verify_client on;

	server_name example.com;

	# Edit route
	location /edit {
		proxy_pass http://127.0.0.1:5000/edit;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	# Auth route
	location /auth {
		proxy_pass http://127.0.0.1:5000/auth;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	# HTML files
	location / {
		root /home/elliot/Codes/projects/miki/instance/output;
		try_files $uri $uri/ @miki404;
	}

	# 404 Error
	location @miki404 {
		rewrite ^(.*)\.html$ $1.md permanent;
		return 302 /edit?file=$request_uri;
	}
}
